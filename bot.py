from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –•—Ä–∞–Ω–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

# === –ö–ù–û–ü–ö–ò –ì–õ–ê–í–ù–û–ì–û –ú–ï–ù–Æ ===
main_menu_keyboard = [
    ['üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ö–ë–ñ–£ –∏ –º–µ–Ω—é'],
    ['üì∑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ —Ñ–æ—Ç–æ'],
    ['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚ÑπÔ∏è –û –±–æ—Ç–µ']
]
main_menu_markup = ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True)

# === –°–¢–ê–†–¢ ===
def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥.\n\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=main_menu_markup
    )

# === –ú–ï–ù–Æ ===
def handle_menu(update: Update, context: CallbackContext) -> None:
    text = update.message.text
    chat_id = update.message.chat_id

    if text == 'üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ö–ë–ñ–£ –∏ –º–µ–Ω—é':
        user_data[chat_id] = {}
        update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –∏–º—è
        context.user_data['step'] = 'name'

    elif text == 'üì∑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ —Ñ–æ—Ç–æ':
        update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ –µ–≥–æ —Å–æ—Å—Ç–∞–≤–∞.")

    elif text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        update.message.reply_text("–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.")

    elif text == '‚ÑπÔ∏è –û –±–æ—Ç–µ':
        update.message.reply_text(
            "ü§ñ –Ø ‚Äî —É–º–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é –ö–ë–ñ–£, —Å–æ—Å—Ç–∞–≤–ª—è—é –º–µ–Ω—é, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø—Ä–æ–¥—É–∫—Ç—ã. "
            "–†–∞–±–æ—Ç–∞—é –Ω–∞ –Ω–∞—É—á–Ω–æ–π –æ—Å–Ω–æ–≤–µ. –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üí™"
        )

# === –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –ü–û–®–ê–ì–û–í–û ===
def handle_text(update: Update, context: CallbackContext) -> None:
    chat_id = update.message.chat_id
    text = update.message.text
    step = context.user_data.get('step')

    if step == 'name':
        user_data[chat_id]['name'] = text
        update.message.reply_text("–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª:", reply_markup=ReplyKeyboardMarkup([['–ú—É–∂—á–∏–Ω–∞', '–ñ–µ–Ω—â–∏–Ω–∞']], resize_keyboard=True))
        context.user_data['step'] = 'gender'

    elif step == 'gender':
        user_data[chat_id]['gender'] = text
        update.message.reply_text("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        context.user_data['step'] = 'age'

    elif step == 'age':
        if not text.isdigit():
            update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
            return
        user_data[chat_id]['age'] = int(text)
        name = user_data[chat_id]['name']
        gender = user_data[chat_id]['gender']
        age = user_data[chat_id]['age']

        gender_word = "–º—É–∂—á–∏–Ω–∞" if gender == "–ú—É–∂—á–∏–Ω–∞" else "–∂–µ–Ω—â–∏–Ω–∞"
        age_word = f"{age} –ª–µ—Ç" if 11 <= age % 100 <= 19 else (
            f"{age} –≥–æ–¥" if age % 10 == 1 else (
                f"{age} –≥–æ–¥–∞" if 2 <= age % 10 <= 4 else f"{age} –ª–µ—Ç"
            )
        )

        update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æ, {name}! –¢—ã ‚Äî {gender_word}, {age_word}.\n–°–∫–æ—Ä–æ –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞—Å—á—ë—Ç.",
            reply_markup=main_menu_markup
        )
        context.user_data.clear()

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
def main():
    updater = Updater("7878360475:AAGRpyLWxPTwB8W65Gze6yiRRtfIonw0Q2s", use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_menu))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_text))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
